# Karpenter Resources for Spark on EKS - Dev Environment
# Override base karpenter-resources config from infra/argocd/core/karpenter-resources/values.yaml

# Override base nodePools with Spark-specific configuration
nodePools:
  - name: spark-general
    metadata:
      labels:
        type: karpenter
        blueprint: spark-on-eks
        environment: "{{ .Values.global.environment }}"
    spec:
      template:
        spec:
          nodeClassRef:
            apiVersion: karpenter.k8s.aws/v1
            kind: EC2NodeClass
            name: spark-general
          
          requirements:
            - key: "karpenter.sh/capacity-type"
              operator: In
              values: ["spot", "on-demand"]
            - key: "kubernetes.io/arch"
              operator: In
              values: ["amd64"]
            - key: "karpenter.k8s.aws/instance-category"
              operator: In
              values: ["c", "m", "r"]
            - key: "karpenter.k8s.aws/instance-size"
              operator: In
              values: ["large", "xlarge", "2xlarge", "4xlarge"]
          
          expireAfter: 30m
          terminationGracePeriod: 60s
      
      limits:
        cpu: 1000
      
      disruption:
        consolidationPolicy: WhenEmptyOrUnderutilized
        consolidateAfter: 30s  # Faster consolidation for dev

# Override base ec2NodeClasses with Spark configuration
ec2NodeClasses:
  - name: spark-general
    metadata:
      labels:
        blueprint: spark-on-eks
        environment: "{{ .Values.global.environment }}"
    spec:
      amiFamily: AL2023
      instanceStorePolicy: RAID0
      
      # Use global templating instead of hardcoded values
      subnetSelectorTerms:
        - tags:
            karpenter.sh/discovery: "{{ .Values.global.clusterName }}"
            Type: "Private"
      
      securityGroupSelectorTerms:
        - tags:
            karpenter.sh/discovery: "{{ .Values.global.clusterName }}"
            Type: "ClusterSharedNodeSecurityGroup"
      
      blockDeviceMappings:
        - deviceName: /dev/xvda
          ebs:
            volumeSize: 100Gi
            volumeType: gp3
            encrypted: true
            deleteOnTermination: true
      
      # Add required metadata options for security
      metadataOptions:
        httpEndpoint: enabled
        httpProtocolIPv6: disabled
        httpPutResponseHopLimit: 2
        httpTokens: required
      
      detailedMonitoring: true  # Add monitoring
      
      tags:
        Blueprint: spark-on-eks
        Environment: "{{ .Values.global.environment }}"
        ManagedBy: karpenter