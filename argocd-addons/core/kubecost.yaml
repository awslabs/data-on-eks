apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubecost
  namespace: argocd
  labels:
    category: core
    type: cost-management
spec:
  project: core-infrastructure
  source:
    repoURL: oci://public.ecr.aws/kubecost
    chart: cost-analyzer
    targetRevision: "2.7.0"
    helm:
      values: |
        global:
          grafana:
            enabled: false
            proxy: false
          
          prometheus:
            enabled: false
            fqdn: "http://kube-prometheus-stack-prometheus.kube-prometheus-stack.svc.cluster.local:9090"
        
        kubecostFrontend:
          enabled: true
        
        kubecostModel:
          enabled: true
          
          nodeSelector:
            NodeGroupType: "core"
          
          tolerations:
            - key: "CriticalAddonsOnly"
              operator: "Exists"
          
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
        
        service:
          type: ClusterIP
          port: 9090
        
        ingress:
          enabled: false
          className: nginx
          hosts:
            - host: kubecost.{{ .Values.clusterName }}.local
              paths:
                - path: /
                  pathType: Prefix
        
        prometheusRule:
          enabled: true
        
        serviceMonitor:
          enabled: true
        
        persistence:
          enabled: true
          size: 10Gi
          storageClass: gp3
        
        # Cost allocation and efficiency settings
        kubecostProductConfigs:
          clusterName: "{{ .Values.clusterName }}"
          productKey:
            enabled: false
          
          # AWS Spot data integration
          spotDatafeedPrefix: "{{ .Values.s3BucketName }}"
          athenaProjectID: "{{ .Values.accountId }}"
          athenaBucketName: "{{ .Values.s3BucketName }}"
          athenaRegion: "{{ .Values.region }}"
          athenaDatabase: "kubecost"
          athenaTable: "kubecost_spot_data"
  
  destination:
    server: https://kubernetes.default.svc
    namespace: kubecost
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true