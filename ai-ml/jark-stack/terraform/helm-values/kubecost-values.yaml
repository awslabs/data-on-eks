
# KubeCost WebUI -> kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 9090

global:
  # pricingCsv:
  #   enabled: false
  #   location:
  #     provider: "AWS"
  #     region: "us-east-1"
  #     URI: s3://kc-csv-test/pricing_schema.csv # a valid file URI
  #     csvAccessCredentials: pricing-schema-access-secret

  prometheus:
    enabled: true  # Kubecost depends on Prometheus data, it is not optional. When enabled: false, Prometheus will not be installed and you must configure your own Prometheus to scrape kubecost as well as provide the fqdn below. -- Warning: Before changing this setting, please read to understand the risks https://docs.kubecost.com/install-and-configure/install/custom-prom
    fqdn: http://cost-analyzer-prometheus-server.default.svc  # example address of a prometheus to connect to. Include protocol (http:// or https://) Ignored if enabled: true

  grafana:
    enabled: true  # If false, Grafana will not be installed
    domainName: cost-analyzer-grafana.default.svc  # example grafana domain Ignored if enabled: true
    scheme: "http"  # http or https, for the domain name above.
    proxy: true  # If true, the kubecost frontend will route to your grafana through its service endpoint

kubecostFrontend:
  image: public.ecr.aws/kubecost/frontend
  resources:
    requests:
      cpu: "200m"
      memory: "512Mi"

kubecostMetrics:
  emitPodAnnotations: true
  emitNamespaceAnnotations: true

kubecostModel:
  image: public.ecr.aws/kubecost/cost-model
  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"

forecasting:
  fullImageName: public.ecr.aws/kubecost/kubecost-modeling:v0.1.6

networkCosts:
  image:
    repository: public.ecr.aws/kubecost/kubecost-network-costs

clusterController:
  image:
    repository: public.ecr.aws/kubecost/cluster-controller

prometheus:
  server:
    image:
      repository: public.ecr.aws/kubecost/prometheus

  configmapReload:
    prometheus:
      image:
        repository: public.ecr.aws/kubecost/prometheus-config-reloader

reporting:
  productAnalytics: false

# Define persistence volume for cost-analyzer
persistentVolume:
  size: 32Gi
  dbSize: 32.0Gi
  enabled: true # Note that setting this to false means configurations will be wiped out on pod restart.
