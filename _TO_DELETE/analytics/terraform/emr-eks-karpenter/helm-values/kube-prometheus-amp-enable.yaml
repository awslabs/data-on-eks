prometheus:
  serviceAccount:
    create: true
    name: ${amp_sa}
    annotations:
      eks.amazonaws.com/role-arn: ${amp_irsa}
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    remoteWrite:
      - url: ${amp_remotewrite_url}
        sigv4:
          region: ${region}
        queueConfig:
          maxSamplesPerSend: 1000
          maxShards: 200
          capacity: 2500
    retention: 5h
    scrapeInterval: 30s
    evaluationInterval: 30s
    scrapeTimeout: 10s
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          storageClassName: gp2
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
    # Scrape Cost metrics for Kubecost and Yunikorn add-ons
    additionalScrapeConfigs:
      # Prometheus Operator doesn't scrape metrics by default from pods or endpoints with prometheus.io/scrape: "true"
      # Hence we are adding this csutom screape config for  'kubernetes-service-endpoints' and 'kubernetes-pods'
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_ip]
            action: replace
            target_label: pod_ip
          - source_labels: [__meta_kubernetes_pod_host_ip]
            action: replace
            target_label: instance
      - job_name: kubecost
        honor_labels: true
        scrape_interval: 1m
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        dns_sd_configs:
          - names:
              - kubecost-cost-analyzer.kubecost.svc
            type: 'A'
            port: 9003
      - job_name: yunikorn
        honor_labels: true
        scrape_interval: 1m
        scrape_timeout: 10s
        metrics_path: /ws/v1//metrics
        scheme: http
        dns_sd_configs:
          - names:
              - yunikorn-service.yunikorn.svc
            type: 'A'
            port: 9080
alertmanager:
  enabled: false

grafana:
  enabled: true
  additionalDataSources:
    - name: amazon-managed-prometheus
      type: prometheus
      isDefault: false
      url: ${amp_url}
      editable: true
      jsonData:
        sigV4Auth: true
        sigV4Region: ${region}
        sigV4AuthType: "default"
  defaultDashboardsEnabled: true
  # Adding Amazon Managed Prometheus datasource to Grafana config
  serviceAccount:
    create: false
    name: ${amp_sa}
  grafana.ini:
    auth:
      sigv4_auth_enabled: true
