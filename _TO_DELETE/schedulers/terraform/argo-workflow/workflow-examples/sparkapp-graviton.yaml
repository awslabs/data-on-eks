apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: pyspark-pi-karpenter-compute
  namespace: spark-team-a
spec:
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: "public.ecr.aws/data-on-eks/spark3.3.1-hadoop3.2-aws-java-sdk-bundle-1.12.647"
  imagePullPolicy: Always
  mainApplicationFile: local:///opt/spark/examples/src/main/python/pi.py
  sparkVersion: "3.3.1"
  restartPolicy:
    type: OnFailure
    onFailureRetries: 1
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  driver:
    cores: 1
    coreLimit: "1200m"
    memory: "4g"
    labels:
      version: 3.3.1
    serviceAccount: spark-team-a
    # Using Karpenter provisioner nodeSelectors and tolerations
    nodeSelector:
      NodeGroupType: SparkGravitonComputeOptimized
      karpenter.sh/capacity-type: "on-demand"
    tolerations:
      - key: "spark-graviton-compute-optimized"
        operator: "Exists"
        effect: "NoSchedule"
  executor:
    cores: 1
    instances: 4
    memory: "4g"
    serviceAccount: spark-team-a
    labels:
      version: 3.3.1
    # Using Karpenter provisioner nodeSelectors and tolerations
    nodeSelector:
      NodeGroupType: SparkGravitonComputeOptimized
      karpenter.sh/capacity-type: "spot"
    tolerations:
      - key: "spark-graviton-compute-optimized"
        operator: "Exists"
        effect: "NoSchedule"
