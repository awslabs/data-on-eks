apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: karpenter-nodepool
  namespace: argocd
  labels:
    blueprint: spark-k8s-operator
    category: analytics
spec:
  project: data-platform
  source:
    repoURL: https://aws-ia.github.io/eks-data-addons
    chart: karpenter-resources
    targetRevision: "1.37.1"
    helm:
      values: |
        spark-compute-optimized:
          name: spark-compute-optimized
          clusterName: "{{ .Values.clusterName }}"
          ec2NodeClass:
            amiFamily: AL2023
            amiSelectorTerms:
              - alias: al2023@latest
            karpenterRole: "{{ .Values.karpenterNodeRoleName }}"
            subnetSelectorTerms:
              tags:
                Name: "{{ .Values.clusterName }}-private*"
            securityGroupSelectorTerms:
              tags:
                Name: "{{ .Values.clusterName }}-node"
            instanceStorePolicy: RAID0
          
          nodePool:
            labels:
              type: karpenter
              NodeGroupType: SparkComputeOptimized
              multiArch: Spark
            requirements:
              - key: "karpenter.sh/capacity-type"
                operator: In
                values: ["spot", "on-demand"]
              - key: "kubernetes.io/arch"
                operator: In
                values: ["amd64"]
              - key: "karpenter.k8s.aws/instance-category"
                operator: In
                values: ["c"]
              - key: "karpenter.k8s.aws/instance-family"
                operator: In
                values: ["c5d"]
              - key: "karpenter.k8s.aws/instance-size"
                operator: In
                values: ["4xlarge", "9xlarge", "12xlarge", "18xlarge", "24xlarge"]
            limits:
              cpu: 1000
            disruption:
              consolidationPolicy: WhenEmptyOrUnderutilized
              consolidateAfter: 1m
        
        spark-memory-optimized:
          name: spark-memory-optimized
          clusterName: "{{ .Values.clusterName }}"
          ec2NodeClass:
            amiFamily: AL2023
            amiSelectorTerms:
              - alias: al2023@latest
            karpenterRole: "{{ .Values.karpenterNodeRoleName }}"
            subnetSelectorTerms:
              tags:
                Name: "{{ .Values.clusterName }}-private*"
            securityGroupSelectorTerms:
              tags:
                Name: "{{ .Values.clusterName }}-node"
            instanceStorePolicy: RAID0
          
          nodePool:
            labels:
              type: karpenter
              NodeGroupType: SparkMemoryOptimized
            requirements:
              - key: "karpenter.sh/capacity-type"
                operator: In
                values: ["spot", "on-demand"]
              - key: "kubernetes.io/arch"
                operator: In
                values: ["amd64"]
              - key: "karpenter.k8s.aws/instance-category"
                operator: In
                values: ["r"]
              - key: "karpenter.k8s.aws/instance-family"
                operator: In
                values: ["r5d", "r6i", "r7i"]
            limits:
              cpu: 1000
            disruption:
              consolidationPolicy: WhenEmptyOrUnderutilized
              consolidateAfter: 1m
  
  destination:
    server: https://kubernetes.default.svc
    namespace: karpenter
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true